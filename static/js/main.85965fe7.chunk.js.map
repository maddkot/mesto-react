{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupImage.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","alt","name","onClick","type","aria-label","length","arial-label","Main","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","key","Footer","PopupWidthForm","isOpen","isClose","method","nameForm","title","children","onSubmit","action","noValidate","PopupImage","onClose","apiData","baseUrl","headers","this","fetch","then","res","ok","json","Promise","reject","Error","status","item","body","JSON","stringify","id","avatarItem","authorization","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","value","onChange","event","target","required","placeholder","minLength","maxLength","autoComplete","pattern","EditAvatarPopup","onUpdateAvatar","editAvatar","useRef","current","ref","AddPlacePopup","addNewCard","titleCard","setTitle","linkCard","setLinkCard","console","log","App","isEditProfilePopupOpen","setEditProfile","isEditAvatarPopupOpen","setEditAvatar","isAddPlacePopupOpen","setAddCard","selectedCard","setSelectCardClick","handleCardClick","closeAllPopups","closeEscapePopup","closeOverlayPopup","classList","contains","document","addEventListener","removeEventListener","setCurrentUser","setCards","all","getUserInfo","getInitialCards","userData","initialCards","catch","error","Provider","deleteLike","newCard","newCards","c","setLike","deleteCard","filter","items","setUserInfo","changeAvatar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85965fe7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n      </div>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n  \r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  \r\n  //проверяем ид пользователя и ид пользователя, создавшего карточку\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  // создаем константу, в которой првоеряется ид пользователя и отображает класс с корзинкой или его удаляет\r\n  const cardDeleteButtonClassName =\r\n    (`element__basket ${isOwn ? 'element__basket_visible' : 'element__basket_hidden'}`\r\n    );\r\n  \r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = (`element__button-like ${isLiked ? 'element__button-like_on' : ''}`)\r\n  \r\n  \r\n\r\n  function handleClick() {\r\n    onCardClick(card);    \r\n  }\r\n  \r\n  function handleLikeClick() {\r\n    onCardLike(card)\r\n  }\r\n\r\n  function handleCardDelete() {\r\n    onCardDelete(card)\r\n  }\r\n\r\n    return (\r\n        <div className=\"element\">\r\n        <img className=\"element__photo\" src={card.link} alt={card.name} onClick={handleClick}/>\r\n        <div className=\"element__group\">\r\n          <h4 className=\"element__text\">{card.name}</h4>\r\n          <div className=\"element__container-like\">\r\n            <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" aria-label=\"Like\"></button>\r\n            <span className=\"element__like-counter\">{card.likes.length}</span>\r\n          </div>        \r\n        </div>\r\n        <button className={cardDeleteButtonClassName} onClick={handleCardDelete} type=\"button\" arial-label=\"basket\"></button>\r\n      </div> \r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card'\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction Main({cards, onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardLike, onCardDelete}) {\r\n\r\nconst currentUser = React.useContext(CurrentUserContext);\r\n    \r\n    return (\r\n        <main className=\"content\">\r\n\r\n            <section className=\"profile\">\r\n                <button className=\"profile__avatar-button popup_opened\" onClick={onEditAvatar}>\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Изображение пользователя\" />\r\n                </button>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__full-name\">{currentUser.name}</h1>\r\n                    <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Edit\" onClick={onEditProfile}>\r\n                    </button>\r\n                    <p className=\"profile__description\">{currentUser.about}</p>\r\n                </div>\r\n                <button className=\"profile__add-button\" type=\"button\" aria-label=\"Add\" onClick={onAddPlace}>\r\n                </button>\r\n            </section>\r\n\r\n            <div className=\"elements\">\r\n                {cards.map((card) =>(\r\n                    <Card\r\n                    key={card._id}\r\n                    card={card}\r\n                    onCardClick={onCardClick}\r\n                    onCardLike={onCardLike} \r\n                    onCardDelete={onCardDelete}    \r\n                    />\r\n                )\r\n                )}\r\n            </div>\r\n            \r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWidthForm({name, isOpen, isClose, method, nameForm, title, children, onSubmit,}) {\r\n    return (\r\n    <div \r\n      className={`popup popup_${name} ${isOpen && 'popup_opened'}`}>\r\n        <div\r\n          className=\"popup__container\">\r\n          <button\r\n            className=\"popup__close-button\"\r\n            type=\"button\"\r\n            aria-label=\"Close\"\r\n            onClick={isClose}>\r\n        </button>\r\n          <form\r\n            onSubmit={onSubmit}\r\n            className=\"popup__form\"\r\n            action=\"#\"\r\n            method={`${method}`}\r\n            name={`${nameForm}`}\r\n            noValidate>\r\n          <h3 className=\"popup__title\">{title}</h3>\r\n          {children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PopupWidthForm;","import React from 'react'\r\n\r\nfunction PopupImage({card, onClose}) {\r\n    return (\r\n      <div className={`popup popup-image ${card && 'popup_opened'}`}>\r\n      <div className=\"popup-image__container\">\r\n        <button className=\"popup__close-button\" type=\"button\" aria-label=\"Close\" onClick={onClose}>\r\n        </button>\r\n        <figure className=\"popup-image__figure\">\r\n            <img className=\"popup-image__frame\" src={card && card.link} alt={card && card.name}/>\r\n            <figcaption className=\"popup-image__title\">{card && card.name}</figcaption>\r\n        </figure>\r\n\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PopupImage;","\r\n class Api {\r\n    constructor({baseUrl, headers}) {\r\n        this.baseUrl = baseUrl;\r\n        this.headers = headers;        \r\n    }\r\n\r\n    //метод вызова карточек с сервера\r\n    getInitialCards() {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n            });           \r\n    }\r\n\r\n    //метод отправки карточки на сервер\r\n    addNewCard(item) {\r\n        return fetch(`${this.baseUrl}/cards`,\r\n            {\r\n                method: 'POST',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                        /* name: item.title,\r\n                        link: item.url */\r\n                        name: item.name,\r\n                        link: item.link\r\n                    })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n        });           \r\n    }\r\n\r\n    //метод удаления карточки\r\n    deleteCard(id) { \r\n        return fetch(`${this.baseUrl}/cards/${id}`,\r\n        {\r\n            method: \"DELETE\",\r\n            headers: this.headers\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n        });\r\n    }\r\n\r\n\r\n    //метод отправки лайка карточек\r\n    setLike(id) {\r\n        return fetch(`${this.baseUrl}/cards/likes/${id}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: this.headers\r\n            })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n            });\r\n    }\r\n\r\n    //метод удаления лайка карточек\r\n    deleteLike(id) {\r\n        return fetch(`${this.baseUrl}/cards/likes/${id}`,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: this.headers\r\n            })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n            });\r\n    }\r\n\r\n\r\n    //метод получения данных о профиле\r\n    getUserInfo() {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n        })\r\n    }\r\n\r\n    //метод изменение аватарки\r\n    changeAvatar(avatarItem) {\r\n        //console.log(avatarItem);\r\n        return fetch(`${this.baseUrl}/users/me/avatar`,\r\n            {\r\n                method: \"PATCH\",\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    avatar: avatarItem.avatar\r\n                })\r\n            })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n            });\r\n    }\r\n\r\n    //метод отправки данных профиля\r\n    setUserInfo(item) {\r\n        return fetch(`${this.baseUrl}/users/me`,\r\n            {\r\n                method: \"PATCH\",\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    /* name: item.fullName,\r\n                    about: item.description */\r\n                    name: item.name,\r\n                    about: item.about\r\n                })\r\n            })\r\n                .then(res => {\r\n                    if (res.ok) {\r\n                        return res.json();\r\n                        }\r\n                        return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const apiData = new Api({\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",  \r\n    headers: {\r\n      authorization: \"b1c2d7eb-517c-4978-8a15-35a77684fa2b\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n  });","import React from 'react';\r\nimport PopupWidthForm from './PopupWithForm'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction EditProfilePopup({isOpen, isClose, onUpdateUser}) {\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n    \r\n\r\n    function handleName(event) {\r\n        setName(event.target.value) \r\n    }\r\n\r\n    function handleDescription(event) {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name: name,\r\n            about: description\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWidthForm \r\n        name='edit-profile'\r\n        title='Редактировать профиль'\r\n        nameForm='popup__form_edit-profile'\r\n        method=\"GET\"\r\n        isOpen={isOpen}\r\n        isClose={isClose}\r\n        onSubmit={handleSubmit}    \r\n        >\r\n        \r\n        <div className=\"popup__inputs\">\r\n            <input\r\n                value={name || '' }\r\n                onChange={handleName}    \r\n                id=\"full-name-input\"\r\n                className=\"popup__input popup__input_full-name\"\r\n                type=\"text\"            \r\n                name=\"fullName\"\r\n                required\r\n                placeholder=\"Введите имя\"\r\n                minLength=\"2\"\r\n                maxLength=\"40\"            \r\n                autoComplete=\"off\"\r\n                pattern=\"[А-Яа-я ёЁ A-Za-z -]{1,}\" />\r\n            <span\r\n                id=\"full-name-input-error\"\r\n                 className=\"popup__input-error\"></span>\r\n            <input\r\n                value={description  || ''}\r\n                onChange={handleDescription}    \r\n                id=\"descriptions-input\"\r\n                className=\"popup__input popup__input_description\"\r\n                type=\"text\"            \r\n                name=\"description\"\r\n                required\r\n                placeholder=\"Введите профессию\"\r\n                minLength=\"2\"\r\n                maxLength=\"200\"            \r\n                autoComplete=\"off\" />\r\n            <span\r\n                id=\"descriptions-input-error\"\r\n                className=\"popup__input-error\"></span>\r\n        </div>\r\n            <button\r\n                className=\"popup__button-save popup__button-save_profile\"\r\n                type=\"submit\"\r\n                aria-label=\"Save\">Сохранить</button>\r\n        \r\n  </PopupWidthForm>  \r\n\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWidthForm from './PopupWithForm'\r\n\r\n\r\nfunction EditAvatarPopup({isOpen, isClose, onUpdateAvatar}) {\r\n\r\n    const editAvatar = React.useRef('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();      \r\n        onUpdateAvatar({\r\n          avatar: editAvatar.current.value,\r\n        });\r\n        \r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        editAvatar.current.value = ''\r\n    })\r\n\r\n    return (\r\n        <PopupWidthForm\r\n            name='avatar'\r\n            title='Обновить аватар'\r\n            nameForm='popup__form_avatar'\r\n            method='GET'\r\n            isOpen={isOpen}\r\n            isClose={isClose}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div\r\n                className=\"popup__inputs\">\r\n                    <input\r\n                        ref={editAvatar}\r\n                        id=\"avatar-input\"\r\n                        className=\"popup__input popup__input_url\"\r\n                        type=\"url\" name=\"url\"\r\n                        required\r\n                        placeholder=\"https://...\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <span\r\n                        id=\"avatar-input-error\"\r\n                        className=\"popup__input-error\">\r\n                        \r\n                    </span>\r\n          </div>\r\n                <button\r\n                    className=\"popup__button-save popup__button-save_profile\"\r\n                    type=\"submit\"\r\n                    aria-label=\"Save\">\r\n                    Сохранить\r\n                </button>                \r\n      </PopupWidthForm>  \r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import React from 'react';\r\nimport PopupWidthForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, isClose, addNewCard }) {\r\n    \r\n    const [titleCard, setTitle] = React.useState('');\r\n    const [linkCard, setLinkCard] = React.useState('');\r\n\r\n    function handleSubmitCard(e) {\r\n        e.preventDefault();\r\n        addNewCard({\r\n            name: titleCard,\r\n            link: linkCard\r\n        })\r\n        console.log(titleCard, linkCard)\r\n    }\r\n\r\n    function handleTitleCard (event) {\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    function handleLinkCard(event) {\r\n        setLinkCard(event.target.value)    \r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setTitle('')\r\n        setLinkCard('')\r\n    }, [isOpen])\r\n    \r\n\r\n    return (\r\n        <PopupWidthForm\r\n          name='add-form'\r\n          title='Новое место'\r\n          nameForm='popup__form_add-newCard'\r\n          method='GET'\r\n          isOpen={isOpen}\r\n          isClose={isClose}\r\n          onSubmit={handleSubmitCard}  \r\n        > \r\n            \r\n            <div\r\n                className=\"popup__inputs\">\r\n                <input\r\n                    value={titleCard || ''}\r\n                    onChange={handleTitleCard}\r\n                    id=\"card-title-input\"\r\n                    className=\"popup__input popup__input_title\"\r\n                    type=\"text\"\r\n                    name=\"title\"              \r\n                    required\r\n                    placeholder=\"Название\"\r\n                    minLength=\"1\"\r\n                    maxLength=\"30\"\r\n                    autoComplete=\"off\"\r\n                />\r\n                <span\r\n                    id=\"card-title-input-error\"\r\n                    className=\"popup__input-error\">                    \r\n                </span>\r\n                <input\r\n                    value={linkCard || ''}\r\n                    onChange={handleLinkCard}\r\n                    id=\"url-input\"\r\n                    className=\"popup__input popup__input_url\"\r\n                    type=\"url\" name=\"url\" required\r\n                    placeholder=\"Cсылка на картинку (url)\"\r\n                    autoComplete=\"off\"\r\n                />\r\n                <span\r\n                    id=\"url-input-error\"\r\n                    className=\"popup__input-error\">\r\n                    \r\n                </span>\r\n          </div>\r\n            <button\r\n                className=\"popup__button-save popup__button-save_form_add\"\r\n                type=\"submit\"\r\n                aria-label=\"Save\">\r\n                Создать\r\n            </button>         \r\n          \r\n          </PopupWidthForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWidthForm from './PopupWithForm';\r\nimport PopupImage from './PopupImage';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { apiData } from '../utils/Api';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setEditProfile] = React.useState(false)  \r\n  function handleEditProfileClick() {\r\n    setEditProfile(true);\r\n  }\r\n  \r\n  const [isEditAvatarPopupOpen, setEditAvatar] = React.useState(false)\r\n  function handleEditAvatarClick() {\r\n    setEditAvatar(true);\r\n  }\r\n\r\n  const [isAddPlacePopupOpen, setAddCard] = React.useState(false)\r\n  function handleAddPlaceClick() {\r\n    setAddCard(true)\r\n  }\r\n\r\n  const [selectedCard, setSelectCardClick] = React.useState(null)\r\n  function handleCardClick(card) {\r\n    setSelectCardClick(card)\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setEditProfile(false)\r\n    setEditAvatar(false)\r\n    setAddCard(false)\r\n    handleCardClick(null)\r\n  }\r\n\r\n  function closeEscapePopup(event) {\r\n    if (event.key === 'Escape') {\r\n      closeAllPopups()\r\n    }\r\n  }\r\n\r\n  function closeOverlayPopup(event) {\r\n    if (event.target.classList.contains('popup')) {\r\n      closeAllPopups()\r\n    }\r\n  }\r\n\r\n  //тренажер.тема useEffect c mousemove\r\n  React.useEffect(() => {\r\n    document.addEventListener('keydown', closeEscapePopup);\r\n    document.addEventListener('click', closeOverlayPopup);\r\n    return () => {\r\n      document.removeEventListener('keydown', closeEscapePopup);\r\n      document.removeEventListener('click', closeOverlayPopup);\r\n    }\r\n\r\n  })\r\n\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([apiData.getUserInfo(), apiData.getInitialCards()])\r\n      .then(([userData, initialCards]) => {\r\n        setCurrentUser(userData)\r\n        setCards(initialCards) \r\n      })   \r\n      .catch((error) => {\r\n        console.log(error);\r\n    })\r\n  }, [])\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    if (!isLiked) {\r\n      apiData.setLike(card._id)\r\n        .then((newCard) => {\r\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n          setCards(newCards);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n      });\r\n    } else {\r\n      apiData.deleteLike(card._id)\r\n        .then((newCard) => {\r\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n          setCards(newCards);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n  function handleCardDelete(card) {\r\n      apiData.deleteCard(card._id)\r\n        .then(() => {\r\n          const newCards = cards.filter((c) => c._id !== card._id );          \r\n          setCards(newCards);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n      })\r\n  }\r\n\r\n  function handleUpdateUser(items) {\r\n      apiData.setUserInfo(items)\r\n        .then((res) => {\r\n          setCurrentUser(res)\r\n          closeAllPopups()\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n      })\r\n    }\r\n    \r\n  \r\n  function handleUpdateAvatar(item) {\r\n      apiData.changeAvatar(item)\r\n        .then((res) => {\r\n          setCurrentUser(res)\r\n          closeAllPopups()\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n      })  \r\n  }\r\n\r\n  function handleAddPlaceSubmit(item) {\r\n      apiData.addNewCard(item)\r\n        .then((res) => {\r\n          setCards([res, ...cards])\r\n          closeAllPopups()\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n      })  \r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"page\">       \r\n    \r\n      <Header />\r\n      <Main\r\n        cards={cards}    \r\n        onEditAvatar={handleEditAvatarClick}\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onCardClick={handleCardClick}\r\n        onCardLike={handleCardLike}\r\n        onCardDelete={handleCardDelete}  \r\n      />\r\n      <Footer />\r\n    \r\n      \r\n\r\n    <section className=\"popups\">  \r\n\r\n    <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          isClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          >  \r\n    </EditProfilePopup>\r\n          \r\n    <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          isClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}>   \r\n    </EditAvatarPopup>      \r\n          \r\n    <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          isClose={closeAllPopups}\r\n          addNewCard={handleAddPlaceSubmit}  \r\n          >\r\n            \r\n    </AddPlacePopup>\r\n\r\n    <PopupWidthForm\r\n          name='delete-card'\r\n          title='Вы уверены?'\r\n          nameForm='popup__form_delete-card'\r\n          method='POST'\r\n          isClose ={closeAllPopups}\r\n          children={\r\n            <>\r\n              <button className=\"popup__button-delete\" type=\"submit\">Да</button>\r\n            </>\r\n          }\r\n    />\r\n\r\n    \r\n        \r\n    <PopupImage\r\n        card={selectedCard}\r\n        onClose={closeAllPopups}  \r\n    />\r\n        \r\n    </section>\r\n\r\n  </div>\r\n  </CurrentUserContext.Provider>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}